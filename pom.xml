<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.neoxia.chaimae</groupId>
	<artifactId>OpenInnovSquashta</artifactId>
	<packaging>pom</packaging>
	<version>0.0.1-SNAPSHOT</version>

	<dependencies>
	<!-- https://mvnrepository.com/artifact/org.json/json -->
			<dependency>
			    <groupId>org.json</groupId>
			    <artifactId>json</artifactId>
			    <version>20160810</version>
			</dependency>
			
				<dependency>
    	<groupId>com.google.code.gson</groupId>
    	<artifactId>gson</artifactId>
    	<version>2.6.2</version>
	</dependency>
				
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>RELEASE</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>3.8.1</version>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.10.0</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.glassfish.jersey.core</groupId>
		    <artifactId>jersey-client</artifactId>
		    <version>2.25.1</version>
		</dependency>
		
		<dependency>
		    <groupId>org.glassfish.jersey.media</groupId>
		    <artifactId>jersey-media-json-jackson</artifactId>
		    <version>2.25.1</version>
		</dependency>
<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
<!-- 		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		    <version>5.1.38</version>
		</dependency>-->
<!--		<dependency>
			<groupId>io.github.bonigarcia</groupId>
			<artifactId>webdrivermanager</artifactId>
			<version>1.6.0</version>
		</dependency>-->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>22.0</version>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>RELEASE</version>
			<scope>compile</scope>
		</dependency>


			</dependencies>


	<!-- Properties definition -->
	<properties>
		<!-- Squash-TA framework version used by the project -->
		<ta.framework.version>1.10.0.UFT.1</ta.framework.version>

		<java-version>1.8</java-version>
		<org.springframework-version>4.3.2.RELEASE</org.springframework-version>
	</properties>
	

	<build>
		<plugins>
			<!-- Configuration of the Squash TA framework used by the project -->
			<plugin>
				<groupId>org.squashtest.ta</groupId>
				<artifactId>squash-ta-maven-plugin</artifactId>
				<version>${ta.framework.version}</version>

				<!-- Here you can add libraries to the engine classpath, using the <dependencies></dependencies> 
					tag -->
				<!-- A sample with the mySql jdbc driver -->
				<!-- <dependencies> -->
				<!-- <dependency> -->
				<!-- <groupId>mysql</groupId> -->
				<!-- <artifactId>mysql-connector-java</artifactId> -->
				<!-- <version>5.1.19</version> -->
				<!-- </dependency> -->
				<!-- </dependencies> -->

				<dependencies>
					<dependency>
						<groupId>net.sourceforge.javacsv</groupId>
						<artifactId>javacsv</artifactId>
						<version>2.0</version>
					</dependency>
				</dependencies>


				<!-- Under here is the Squash TA framework default configuration -->
				<configuration>

					<!-- Uncomment the line below in order to the build finish in success 
						even if a test failed -->
					<!-- <alwaysSuccess>true</alwaysSuccess> -->

					<!-- Define a log configuration file (at log4j format) to override the 
						one defined internally -->
					<!-- If the given file can't be found the engine switch to the internal 
						configuration -->
					<logConfiguration>${logConfFile}</logConfiguration>

					<!-- Define exporters -->
					<exporters>
						<surefire>
							<jenkinsAttachmentMode>${ta.jenkins.attachment.mode}</jenkinsAttachmentMode>
						</surefire>
						<html />
					</exporters>

					<!-- Define configurers -->
					<configurers>
						<tmCallBack>
							<endpointURL>${status.update.events.url}</endpointURL>
							<executionExternalId>${squash.ta.external.id}</executionExternalId>
							<jobName>${jobname}</jobName>
							<hostName>${hostname}</hostName>
							<endpointLoginConfFile>${squash.ta.conf.file}</endpointLoginConfFile>
							<reportBaseUrl>${ta.tmcallback.reportbaseurl}</reportBaseUrl>
							<jobExecutionId>${ta.tmcallback.jobexecutionid}</jobExecutionId>
							<reportName>${ta.tmcallback.reportname}</reportName>
						</tmCallBack>
					</configurers>
				</configuration>

				<!-- Bind the Squash TA "run" goal to the maven integration-test phase 
					and reuse the default configuration -->
				<executions>
					<execution>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>7</source>
					<target>7</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- Squash TA maven repository -->
	<repositories>
		<repository>
			<id>org.squashtest.ta.release</id>
			<name>squashtest test automation - releases</name>
			<url>http://repo.squashtest.org/maven2/releases</url>
		</repository>
	</repositories>

	<!-- Squash TA maven plugin repository -->
	<pluginRepositories>
		<pluginRepository>
			<id>org.squashtest.plugins.release</id>
			<name>squashtest.org</name>
			<url>http://repo.squashtest.org/maven2/releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

</project>